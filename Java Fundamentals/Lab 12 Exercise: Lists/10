
//On the first input line you will receive the initial schedule of lessons and exercises that
//are going to be part of the next course, separated by comma and space ", ". But before the 
//course starts, there are some changes to be made. Until you receive "course start" you will
//be given some commands to modify the course schedule. The possible commands are:
//Add:{lessonTitle} - add the lesson to the end of the schedule, if it does not exist
//Insert:{lessonTitle}:{index} -insert the lesson to the given index, if it does not exist
///Remove:{lessonTitle} -remove the lesson, if it exists
//Swap:{lessonTitle}:{lessonTitle} -change the place of the two lessons, if they exist
//Exercise:{lessonTitle} -add Exercise in the schedule right after the lesson index, if the 
//lesson exists and there is no exercise already, in the following format "{lessonTitle}-Exercise".
//If the lesson doesn`t exist, add the lesson in the end of the course schedule, followed by the Exercise.
//Each time you Swap or Remove a lesson, you should do the same with the Exercises, if there are any, 
//which follow the lessons.

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class zadachi {
	
	public static void add (List<String> arg1, String arg2) {
		if (arg1.contains(arg2)) {
			
		} else {
			arg1.add(arg2);
		}
	}
	
	public static void insert (List<String> arg1, String arg2, int arg3) {
		if (arg1.contains(arg2)) {
			
		} else {
			arg1.add(arg3, arg2);
		}
	}
	
	public static void remove (List<String> arg1, String arg2) {
		if (arg1.contains(arg2)) {
			arg1.remove(arg2);
		}
		if (arg1.contains(arg2+"-Exercise")) {
			arg1.remove(arg2+"-Exercise");
		}
	}
	
	public static void swap (List<String> arg1, String arg2, String arg3) {
		if (arg1.contains(arg2) && arg1.contains(arg3)) {
			int firstIndex = 0;
			int secondIndex = 0;
			for (int i = 0; i < arg1.size(); i++) {
				if (arg1.get(i).equals(arg2)) {
					firstIndex = i;
				} else if (arg1.get(i).equals(arg3)) {
					secondIndex = i;
				}
			}
			arg1.set(firstIndex, arg3);
			arg1.set(secondIndex, arg2);
			if(arg1.contains(arg2+"-Exercise")) {
				arg1.remove(arg2+"-Exercise");
				arg1.add(secondIndex + 1, arg2+"-Exercise");
			}
			if (arg1.contains(arg3+"-Exercise")) {
				arg1.remove(arg3+"-Exercise");
				arg1.add(firstIndex + 1, arg3+"-Exercise");
			}
		}
	}
	
	public static void exercise (List<String> arg1, String arg2) {
		if (arg1.contains(arg2)) {
			if (arg1.contains(arg2+"-Execise")) {
				
			} else {
				for (int i = 0; i < arg1.size(); i++) {
					if (arg1.get(i).equals(arg2)) {
						arg1.add(i, arg2+"-Exercise");
						break;
					}
				}
			}
		} else {
			arg1.add(arg2);
			arg1.add(arg2+"-Exercise");
		}
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String[] line = scan.nextLine().split(", ");
		List<String> courses = new ArrayList<>();
		for (int i = 0; i < line.length; i++) {
			courses.add(line[i]);
		}
		String newCommand = scan.nextLine();
		while (!newCommand.equals("course start")) {
			String [] command = newCommand.split(":");
			switch (command[0]) {
			case "add":add(courses, command[1]);break;
			case "insert":insert(courses, command[1], Integer.parseInt(command[2]));break;
			case "remove":remove(courses, command[1]);break;
			case "swap":swap(courses,command[1], command[2]);break;
			case "exercise":exercise(courses, command[1]);break;
			}
			newCommand = scan.nextLine();
		}
		for (int i = 0; i < courses.size(); i++) {
			System.out.println(i + 1 + "." + courses.get(i));
		}
	}
}
