
//On the first line you will be given a list of wagons (integers). Each integer represents the number of passengers that
//are currently in each wagon. On the next line you will get the max capacity of each wagon (single integer). Until you
//receive "end" you will be given two types of input:
//Add {passengers} - add a wagon to the end with the given number of passengers
//{passengers} - find an existing wagon to fit all the passengers (starting from the first wagon)
//At the end print the final state of the train (all the wagons separated by a space)

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class zadachi {
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		List<Integer> wagons = Arrays.stream(scan.nextLine().split(" ")).map(Integer::parseInt).collect(Collectors.toList());
		int capacity = scan.nextInt();
		scan.nextLine();
		String input = scan.nextLine();
		while (!input.equals("end")) {
			if (input.contains("add")) {
				String[] inputSplit = input.split(" ");
				wagons.add(Integer.parseInt(inputSplit[1]));
			} else {
				int ppl = Integer.parseInt(input);
				for (int i = 0; i < wagons.size(); i++) {
					if (wagons.get(i) + ppl <= capacity) {
						wagons.set(i, wagons.get(i) + ppl);
						break;
					}
				}
			}
			input = scan.nextLine();
		}
		for (int wagon : wagons) {
			System.out.print(wagon + " ");
		}
	}
}
