
//Define a class Employee that holds the following information: name, salary, position, department, email and age.
//The name, salary, position and department are mandatory while the rest are optional.
//Your task is to write a program which takes N lines of employees from the console and calculates the department
//with the highest average salary and prints for each employee in that department his name, salary, email and age –
//sorted by salary in descending order. If an employee doesn’t have an email – in place of that field you should print
//“n/a” instead, if he doesn’t have an age – print “-1” instead. The salary should be printed to two decimal places
//after the seperator.

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

public class zadachi {

	static class Employee {
		private String name;
		private float salary;
		private String position;
		private String department;
		private String email;
		private int age;
		
		public Employee (String name, float salary, String position, String department) {
			this.name = name;
			this.salary = salary;
			this.position = position;
			this.department = department;
			this.email = "n/a";
			this.age = -1;
		}
		
		public String getName () {
			return this.name;
		}
		public float getSalary () {
			return this.salary;
		}
		public String getPosition () {
			return this.position;
		}
		public String getDepartment () {
			return this.department;
		}
		public String getEmail () {
			return this.email;
		}
		public int getAge() {
			return this.age;
		}
		public void setEmail(String email) {
			this.email = email;
		}
		public void setAge (int age) {
			this.age = age;
		}
	}
	
	public static String departments (List<Employee> employees) {
		List<String> department = new ArrayList<>();
		List<Float> salaryes = new ArrayList<>();
		for (Employee employee : employees) {
			if (!department.contains(employee.getDepartment())) {
				department.add(employee.getDepartment());
			}
		}
		int count = 0;
		float sum = 0;
		for (int i = 0; i < department.size(); i++) {
			for (Employee employee : employees) {
				if (department.get(i).equals(employee.getDepartment())) {
					count++;
					sum += employee.getSalary();
				}
			}
			salaryes.add(sum/count);
		}
		int index = 0;
		for (int i = 1; i < salaryes.size(); i++) {
			if (salaryes.get(i) > salaryes.get(i - 1)) {
				index = i;
			}
		}
		return department.get(index);
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		scan.nextLine();
		List<Employee> employees = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			String[] data = scan.nextLine().split(" ");
			Employee employee = new Employee(data[0],Float.parseFloat(data[1]), data[2], data[3]);
			employees.add(employee);
			if (data.length == 6) {
				employee.setEmail(data[4]);
				employee.setAge(Integer.parseInt(data[5]));
			} else if (data.length == 5) {
				data[4].toCharArray();
				for (int j = 0; j < data[4].length(); j++) {
					if (data[4].charAt(j) == 64) {
						employee.setEmail(data[4]);
					}
				}
				if (employee.getEmail() == "n/a") {
					employee.setAge(Integer.parseInt(data[4]));
				}
			}
		}
		employees.sort(Comparator.comparing(Employee::getSalary).reversed());
		String maxAvgSalaryDepartment = departments(employees);
		System.out.printf("Highest Average Salary: %s.%n", maxAvgSalaryDepartment);
		for (Employee employee : employees) {
			if (maxAvgSalaryDepartment.equals(employee.getDepartment())) {
				System.out.printf("%s %.2f %s %d%n", employee.getName(), employee.getSalary(),
						employee.getEmail(), employee.getAge());
			}
		}
	}
}
