//First you start with the letter before the number. 
//•	If it's uppercase you divide the number by the letter's position in the alphabet. 
//•	If it's lowercase you multiply the number with the letter's position in the alphabet. 
//Then you move to the letter after the number. 
//•	If it's uppercase you subtract its position from the resulted number.
//•	If it's lowercase you add its position to the resulted number.
//For example, you are given the sequence "A12b s17G":
//We have two strings – "A12b" and "s17G". We do the operations on each and sum them. We start with 
//the letter before the number on the first string. A is Uppercase and its position in the alphabet is 1.
//So we divide the number 12 with the position 1 (12/1 = 12). Then we move to the letter after the number
//b is lowercase and its position is 2. So we add 2 to the resulted number (12+2=14). Similarly for the 
//second string s is lowercase and its position is 19 so we multiply it with the number (17*19 = 323). 
//Then we have Uppercase G with position 7, so we subtract it from the resulted number (323 – 7 = 316). 
//Finally, we sum the 2 results and we get 14 + 316=330.
//Input
//The input comes from the console as a single line, holding the sequence of strings. Strings are separated
//by one or more white spaces. The input data will always be valid and in the format described. There is no
//need to check it explicitly.
//Output
//Print at the console a single number: the total sum of all processed numbers rounded up to two digits 
//after the decimal separator.
//Constraints
//•	The count of the strings will be in the range [1 … 10].
//•	The numbers between the letters will be integers in range [1 … 2 147 483 647].
//•	Time limit: 0.3 sec. Memory limit: 16 MB.

import java.util.Scanner;

public class zadachi {
	
	public static double currentValue(char before, char after, int number) {
		double value = 0;
		if(Character.isUpperCase(before)) {
			value += number * 1.00 / (before - 'A' + 1);
		} else {
			value += number * 1.00 * (before - 'a' + 1);
		}
		if(Character.isUpperCase(after)) {
			value -= after * 1.00 - 'A' + 1;
		} else {
			value += after * 1.00 - 'a' + 1;
		}
		return value;
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String[] tasks = scan.nextLine().split("\\s+");
		double answer = 0;
		for(String task : tasks) {
			char before = task.charAt(0);
			char after = task.charAt(task.length() - 1);
			int number = Integer.parseInt(task.substring(1, task.length() - 1));
			answer += currentValue(before, after, number);
		}
		System.out.printf("%.2f", answer);
	}
}
