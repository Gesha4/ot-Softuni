//You've beaten all the content and the last thing left to accomplish is own a legendary item. 
//However, it&#39;s a tedious process and requires quite a bit of farming.
//Anyway, you are not too pretentious - any legendary will do. The possible items are:
// Shadowmourne - requires 250 Shards
// Valanyr - requires 250 Fragments
// Dragonwrath - requires 250 Motes
//Shards, Fragments and Motes are the key materials, all else is junk. You will be given lines of input,
//such as "2 motes 3 ores 15 stones". Keep track of the key materials - the first that reaches the 250 
//mark wins the race. At that point, print the corresponding legendary obtained. Then, print the remaining
//shards, fragments, motes, ordered by quantity in descending order, then by name in ascending order, each
//on a new line. Finally, print the collected junk items, in alphabetical order.

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class zadachi {
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		Map<String, Integer> junk = new TreeMap<>();
		Map<String, Integer> keyMaterials = new HashMap<>();
		keyMaterials.put("shards", 0);
		keyMaterials.put("fragments", 0);
		keyMaterials.put("motes", 0);
		int [] collected = new int[3];
		boolean itemObtained = false;
		while(!itemObtained){
			String[] regants = scan.nextLine().split(" ");
			for (int i = 0; i < regants.length; i+=2) {
				int quantity = Integer.parseInt(regants[i]);
				String material = regants[i + 1].toLowerCase();
				if(keyMaterials.containsKey(material)) {
					keyMaterials.put(material, keyMaterials.get(material) + quantity);
					if(material.equals("shards")) {
						collected[0] += quantity;
						itemObtained = collected[0] >= 250;
					} else if (material.equals("fragments")) {
						collected[1] += quantity;
						itemObtained = collected[1] >= 250;
					} else {
						collected[2] += quantity;
						itemObtained = collected[2] >= 250;
					}
					if (itemObtained) {
						break;
					}
				} else {
					if(!junk.containsKey(material)) {
						junk.put(material, quantity);
					} else {
						junk.put(material, junk.get(material) + quantity);
					}
				}
			}
		}
		String item = "";
		if(collected[0] >= 250) {
			item = "Shadowmourne";
			keyMaterials.put("shards", keyMaterials.get("shards") - 250);
		} else if(collected[1] >= 250) {
			item = "Valanyr";
			keyMaterials.put("fragments", keyMaterials.get("fragments") - 250);
		} else {
			item = "Dragonwrath";
			keyMaterials.put("motes", keyMaterials.get("motes") - 250);
		}
		System.out.println(item + " obtained!");
		keyMaterials.entrySet().stream().sorted((f , s) -> {
			return s.getValue().compareTo(f.getValue());
		}).forEach(entry -> {
			System.out.println(entry.getKey() + ": " + entry.getValue());
		});;
		for (Map.Entry<String, Integer> entry : junk.entrySet()) {
			System.out.println(entry.getKey() + ": " + entry.getValue());
		}
	}
}
