//Write a program, which validates parking for an online service. Users can register to park and 
//unregister to leave. The program receives 2 commands:
//"register {username} {licensePlateNumber}":
// The system only supports one car per user at the moment, so if a user tries to register another
//license plate, using the same username, the system should print: "ERROR: already registered with 
//plate number {licensePlateNumber}"
// If the aforementioned checks pass successfully, the plate can be registered, so the system should 
//print: "{username} registered {licensePlateNumber} successfully"

//"unregister {username}":
// If the user is not present in the database, the system should print: "ERROR: user {username} not found"
// If the aforementioned check passes successfully, the system should print: "{username} unregistered successfully"

//After you execute all of the commands, print all the currently registered users and their license plates
//in the format: "{username} => {licensePlateNumber}"
//Input
// First line: n - number of commands - integer
// Next n lines: commands in one of two possible formats:
// Register: "register {username} {licensePlateNumber}"
// Unregister: "unregister {username}"
//The input will always be valid and you do not need to check it explicitly.

import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;

public class zadachi {
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		Map<String, String> parking = new LinkedHashMap<>();
		int n = scan.nextInt();
		scan.nextLine();
		for(int i = 0; i < n; i++) {
			String[] line = scan.nextLine().split(" ");
			switch(line[0]) {
			case "register" : if (parking.containsKey(line[1])) {
								System.out.println("ERROR: already registered with plate number " + 
										parking.get(line[1]));
							} else {
								parking.put(line[1], line[2]);
								System.out.println(line[1] + " registered " + line[2] + " successfully");
							}break;
			case "unregister" : if(!parking.containsKey(line[1])) {
								System.out.println("ERROR: user" + line[1] + " not found");
								} else {
									parking.remove(line[1]);
									System.out.println(line[1] + " unregistered succesufully");
								}
			}
		}
		for (Map.Entry<String, String> parks : parking.entrySet()) {
			System.out.println(parks.getKey() + " => " + parks.getValue());
		}
	}
}
