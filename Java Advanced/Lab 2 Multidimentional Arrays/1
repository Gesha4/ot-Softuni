//Write a program that reads two integer matrices (2D arrays) from the console and compares them element by element. For better 
//code reusability, you could do the comparison in a method, which returns true if they are equal and false if not. Each matrix
//definition on the console will contain a line with a positive integer number R – the number of rows in the matrix and C – the 
//number of columns – followed by R lines containing the C numbers, separated by spaces (each line will have an equal amount of
//numbers. The matrices will have at most 10 rows and at most 10 columns.Print equal if the matrices match, and not equal if 
//they don’t match.

import java.util.Arrays;
import java.util.Scanner;

public class zadachi {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String[] dimentions = scan.nextLine().split("\\s+");
		int[][] first = new int[Integer.parseInt(dimentions[0])][Integer.parseInt(dimentions[1])];
		for(int i = 0; i < Integer.parseInt(dimentions[0]); i++) {
			first[i] = Arrays.stream(scan.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
		}
		dimentions = scan.nextLine().split("\\s+");
		int [][] second = new int[Integer.parseInt(dimentions[0])][Integer.parseInt(dimentions[1])];
		for(int i = 0; i < Integer.parseInt(dimentions[0]); i++) {
			second[i] = Arrays.stream(scan.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
		}
		if(first.length != second.length) {
			System.out.println("not equal");
		} else {
			boolean equal = true;
			for(int i = 0; i < first.length; i++) {
				for(int j = 0; j < first.length; j++) {
					if(first[i][j] != second[i][j]) {
						equal = false;
					}
				}
			}
			if(equal) {
				System.out.println("equal");
			} else {
			System.out.println("not equal");
			}
		}
	}
}
