//Extend "Browser History" with a "forward" instruction which visits URLs that were navigated away from
//by "back". Each forward instruction visits the next most-recent such URL. If a normal navigation happens,
//all potential forward URLs are removed until a new back instruction is given. If the forward instruction
//canâ€™t be executed, print "no next URLs".

import java.util.ArrayDeque;
import java.util.Scanner;

public class zadachi {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		ArrayDeque<String> browser = new ArrayDeque<>();
		ArrayDeque<String> forward = new ArrayDeque<>();
		String input = scan.nextLine();
		while(!input.equals("Home")) {
			if(input.equals("back")) {
				if(browser.isEmpty() || browser.size() == 1) {
					System.out.println("no previous URLs");
				} else {
					forward.push(browser.pop());
					System.out.println(browser.peek());
				}
			} else if(input.equals("forward")) {
				if(forward.isEmpty()) {
					System.out.println("no next URLs");
				} else {
					browser.push(forward.pop());
					System.out.println(browser.peek());
				}
			} else {
				browser.push(input);
				forward.clear();
				System.out.println(browser.peek());
			}
			input = scan.nextLine();
		}
	}
}
