//You are given N plants in a garden. Each of these plants has been added with some amount of pesticide.
//After each day, if any plant has more pesticide than the plant at its left, being weaker (more GMO) 
//than the left one, it dies. You are given the initial values of the pesticide and position of each plant.
//Print the number of days after which no plant dies, i.e. the time after which there are no plants with 
//more pesticide content than the plant to their left.
//Input
//The input consists of an integer N representing the number of plants.
//The next single line consists of N integers, where every integer represents the position and amount of
//pesticides of each plant. 1 ≤ N ≤ 100000
//Pesticides amount on a plant is between 0 and 1000000000
//Output
//Output a single value equal to the number of days after which no plants die

import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class zadachi {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		ArrayDeque<Integer> stack = new ArrayDeque<>();
		stack.push(1);
		int num = Integer.parseInt(scan.nextLine());
		List<Integer> plants = Arrays.stream(scan.nextLine().split(" "))
				.mapToInt(Integer::parseInt).collect(ArrayList::new, List::add, List::addAll);
		int days = 0;
		while(!stack.isEmpty()) {
			int index = stack.pop();
			for(int i = index; i < plants.size(); i++) {
				if(plants.get(i) > plants.get(i - 1)) {
					stack.push(i);
				}
			}
			if(!stack.isEmpty()) {
				days++;
				int position;
				while(stack.size() > 1) {
					position = stack.pop();
					plants.remove(position);
				}
				position = stack.peek();
				plants.remove(position);
			}
		}
		System.out.println(days);
	}
}
