//You will be given an integer N representing the number of elements to enqueue (add), an integer S representing the number of
//elements to dequeue (remove/poll) from the queue and finally an integer X, an element that you should check whether is present
//in the queue. If it is print true on the console, if itâ€™s not print the smallest element currently present in the queue.

import java.util.ArrayDeque;
import java.util.Scanner;

public class zadachi {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		ArrayDeque<Integer> queue = new ArrayDeque<>();
		String[] line = scan.nextLine().split(" ");
		int in = Integer.parseInt(line[0]);
		int out = Integer.parseInt(line[1]);
		int find = Integer.parseInt(line[2]);
		String[] nums = scan.nextLine().split("\\s+");
		for(int i = 0; i < in; i++) {
			queue.offer(Integer.parseInt(nums[i]));
		}
		for(int i = 0; i < out; i++) {
			queue.poll();
		}
		if(queue.contains(find)) {
			System.out.println("true");
		} else {
			if(queue.isEmpty()) {
				System.out.println("0");
			} else {
				int smallest = Integer.MAX_VALUE;
				while(!queue.isEmpty()) {
					int checkNum = queue.poll();
					if(smallest > checkNum) {
						smallest = checkNum;
					}
				}
				System.out.println(smallest);
			}
		}
	}
}
