//You are the owner of a courier company and want to make a system for tracking your cars and their cargo. Define a
//class Car that holds information about model, engine, cargo and a collection of exactly 4 tires. The engine, cargo
//and tire should be separate classes, create a constructor that receives all information about the Car and creates and
//initializes its inner components (engine, cargo and tires). On the first line of input you will receive a number N - 
//the number of cars you have, on each of the next N lines you will receive information about a car in the format “<Model>
//<EngineSpeed><EnginePower><CargoWeight><CargoType><Tire1Pressure><Tire1Age><Tire2Pressure><Tire2Age><Tire3Pressure>
//<Tire3Age><Tire4Pressure><Tire4Age>” where the speed, power, weight and tire age are integers, tire pressure is a double.
//After the N lines you will receive a single line with one of 2 commands “fragile” or “flamable” , if the command is
//“fragile” print all cars whose Cargo Type is “fragile” with a tire whose pressure is < 1, if the command is “flamable”
//print all cars whose Cargo Type is “flamable” and have Engine Power > 250. The cars should be printed in order of
//appearing in the input.

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class zadachi {
	
	static class Engine {
		private int engineSpeed;
		private int enginePower;
		public Engine (int engineSpeed, int enginePower) {
			this.engineSpeed = engineSpeed;
			this.enginePower = enginePower;
		}
		public int getEngineSpeed() {
			return this.engineSpeed;
		}
		public int getEnginePower() {
			return this.enginePower;
		}
	}
	
	static class Cargo {
		private int cargoWeight;
		private String cargoType;
		public Cargo (int cargoWeight, String cargoType) {
			this.cargoWeight = cargoWeight;
			this.cargoType = cargoType;
		}
		public int getCargoWeight () {
			return this.cargoWeight;
		}
		public String getCargoType () {
			return this.cargoType;
		}
	}
	
	static class Tire {
		private double tire1Pressure;
		private int tire1Age;
		private double tire2Pressure;
		private int tire2Age;
		private double tire3Pressure;
		private int tire3Age;
		private double tire4Pressure;
		private int tire4Age;
		public Tire (double tire1Pressure, int tire1Age, double tire2Pressure,int tire2Age,
				double tire3Pressure, int tire3Age, double tire4Pressure, int tire4Age) {
			this.tire1Pressure = tire1Pressure;
			this.tire1Age = tire1Age;
			this.tire2Pressure = tire2Pressure;
			this.tire2Age = tire2Age;
			this.tire3Pressure = tire3Pressure;
			this.tire3Age = tire3Age;
			this.tire4Pressure = tire4Pressure;
			this.tire4Age = tire4Age;
		}
		public double getTire1Pressure() {
			return this.tire1Pressure;
		}
		public int getTire1Age() {
			return this.tire1Age;
		}
		public double getTire2Pressure() {
			return this.tire2Pressure;
		}
		public int getTire2Age() {
			return this.tire2Age;
		}
		public double getTire3Pressure() {
			return this.tire3Pressure;
		}
		public int getTire3Age() {
			return this.tire3Age;
		}
		public double getTire4Pressure() {
			return this.tire4Pressure;
		}
		public int getTire4Age() {
			return this.tire4Age;
		}
	}

	static class Car {
		private String model;
		private Engine engine;
		private Cargo cargo;
		private Tire tire;

		public Car (String model, int engineSpeed, int enginePower, int cargoWeight, String cargoType,
				double tire1Pressure, int tire1Age, double tire2Pressure, int tire2Age, 
				double tire3Pressure, int tire3Age, double tire4Pressure, int tire4Age) {
			this.model = model;
			engine = new Engine(engineSpeed, enginePower);
			cargo = new Cargo(cargoWeight, cargoType);
			tire = new Tire(tire1Pressure, tire1Age, tire2Pressure, tire2Age, tire3Pressure, tire3Age,
					tire4Pressure, tire4Age);
		}
		
		public String getModel () {
			return this.model;
		}
	}
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		scan.nextLine();
		List<Car> cars = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			String[] input = scan.nextLine().split(" ");
			Car car = new Car(input[0], Integer.parseInt(input[1]), Integer.parseInt(input[2]),
					Integer.parseInt(input[3]), input[4], Double.parseDouble(input[5]), Integer.parseInt(input[6]),
					Double.parseDouble(input[7]), Integer.parseInt(input[8]), Double.parseDouble(input[9]),
					Integer.parseInt(input[10]), Double.parseDouble(input[11]), Integer.parseInt(input[12]));
			cars.add(car);
		}
		String wanted = scan.nextLine();
		if (wanted.equals("fragile")) {
			for (Car car : cars) {
				if (car.cargo.getCargoType().equals(wanted) && (car.tire.tire1Pressure < 1 ||
						car.tire.tire2Pressure < 1 || car.tire.tire3Pressure < 1 || car.tire.tire4Pressure < 1)) {
					System.out.println(car.getModel());
				}
			}
		} else {
			for (Car car : cars) {
				if (car.cargo.getCargoType().equals("flamable") && car.engine.getEnginePower() > 250) {
					System.out.println(car.getModel());
				}
			}
		}
	}
}
