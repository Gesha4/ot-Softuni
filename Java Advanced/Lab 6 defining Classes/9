//Google is always watching you, so it should come as no surprise that they know everything
//about you (even your pokemon collection), since you’re a really good at writing classes
//Google asked you to design a Class that can hold all the information they need for people.
//From the console you will receive an unkown amount of lines until the command "End" is red,
//on each of those lines there will be information about a person in one of the following formats:
//"<Name> company <companyName> <department> <salary>"  
//"<Name> pokemon <pokemonName> <pokemonType>"
//"<Name> parents <parentName> <parentBirthday>"
//"<Name> children <childName> <childBirthday>"
//"<Name> car <carModel> <carSpeed>"
//You should structure all information about a person in a class with nested subclasses. 
//People names are unique - there won’t be 2 people with the same name, a person can also 
//have only 1 company and car, but can have multiple parents, chidlren and pokemons. After 
//the command "End" is received on the next line you will receive a single name, you should
//print all information about that person. Note that information can change during the input,
//for instance if we receive multiple lines which specify a person company, only the last one
//should be the one remembered. The salary must be formated to two decimal places after the 
//seperator.Note: print the information in format:
//{personName}
//Company:
//{companyName} {companyDepartment} {salary}
//...
//Children:
//{childName} {childBirthday}
//{childName} {childBirthday}

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class zadachi {
	
	static class Company{
		private String name;
		private String department;
		private double salary;
		public String getName() {
			return name;
		}
		public void setName(String name) {
			this.name = name;
		}
		public String getDepartment() {
			return department;
		}
		public void setDepartment(String department) {
			this.department = department;
		}
		public double getSalary() {
			return salary;
		}
		public void setSalary(double salary) {
			this.salary = salary;
		}
		public Company(String name, String department, double salary) {
			this.name = name;
			this.department = department;
			this.salary = salary;
		}
	}
	
	static class Pokemon{
		private String name;
		private String type;
		public String getName() {
			return name;
		}
		public String getType() {
			return type;
		}
		public Pokemon(String name, String type) {
			this.name = name;
			this.type = type;
		}
	}
	
	static class Parents{
		private String name;
		private String date;
		public String getName() {
			return name;
		}
		public String getDate() {
			return date;
		}
		public Parents(String name, String date) {
			this.name = name;
			this.date = date;
		}
	}
	
	static class Children{
		private String name;
		private String date;
		public String getName() {
			return name;
		}
		public String getDate() {
			return date;
		}
		public Children(String name, String date) {
			this.name = name;
			this.date = date;
		}
	}
	
	static class Car{
		private String model;
		private int speed;
		public Car(String model, int speed) {
			this.model = model;
			this.speed = speed;
		}
		public String getModel() {
			return model;
		}
		public void setModel(String model) {
			this.model = model;
		}
		public int getSpeed() {
			return speed;
		}
		public void setSpeed(int speed) {
			this.speed = speed;
		}
	}
	
	static class Person{
		private String name;
		private Company company = null;
		private Car car = null;
		private List<Pokemon> pokemons = new ArrayList<>();
		private List<Parents> parents = new ArrayList<>();
		private List<Children> children = new ArrayList<>();
		public String getName() {
			return name;
		}
		public Person(String name) {
			this.name = name;
		}
		public Company getCompany() {
			return company;
		}
		public void setCompany(Company company) {
			this.company = company;
		}
		public Car getCar() {
			return car;
		}
		public void setCar(Car car) {
			this.car = car;
		}
		public List<Pokemon> getPokemons() {
			return pokemons;
		}
		public void addPokemons(Pokemon pokemon) {
			this.pokemons.add(pokemon);
		}
		public List<Parents> getParents() {
			return parents;
		}
		public void addParents(Parents parent) {
			this.parents.add(parent);
		}
		public List<Children> getChildren() {
			return children;
		}
		public void addChildren(Children child) {
			this.children.add(child);
		}
		public boolean haveCompany() {
			if(company == null) {
				return false;
			} else {
				return true;
			}
		}public boolean haveCar() {
			if(car == null) {
				return false;
			} else {
				return true;
			}
		}
	}
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		Map<String, Person> persons = new HashMap<>();
		String input = scan.nextLine();
		while(!input.equals("End")) {
			String[] data = input.split(" ");
			if(!persons.containsKey(data[0])) {
				persons.put(data[0], new Person(data[0]));
			}
			if(data[1].equals("company")) {
				Company company = new Company(data[2], data[3], Double.parseDouble(data[4]));
				persons.get(data[0]).setCompany(company);
			} else if(data[1].equals("car")) {
				Car car = new Car(data[2], Integer.parseInt(data[3]));
				persons.get(data[0]).setCar(car);
			} else if(data[1].equals("pokemon")) {
				Pokemon pokemon = new Pokemon(data[2], data[3]);
				persons.get(data[0]).addPokemons(pokemon);
			} else if(data[1].equals("parents")) {
				Parents parent = new Parents(data[2], data[3]);
				persons.get(data[0]).addParents(parent);
			} else {
				Children child = new Children(data[2], data[3]);
				persons.get(data[0]).addChildren(child);
			}
			input = scan.nextLine();
		}
		input = scan.nextLine();
		Person person = persons.get(input);
		System.out.println(person.getName());
		System.out.println("Company:");
		if(person.haveCompany()) {
			Company company = person.getCompany();
			System.out.printf("%s %s %.2f%n", company.getName(), company.getDepartment(), company.getSalary());
		}
		System.out.println("Car:");
		if(person.haveCar()) {
			Car car = person.getCar();
			System.out.printf("%s %d%n", car.getModel(), car.getSpeed());
		}
		System.out.println("Pokemon:");
		if(person.getPokemons().size() != 0) {
			List<Pokemon> pokemons = person.getPokemons();
			for(Pokemon pokemon : pokemons) {
				System.out.printf("%s %s%n", pokemon.getName(), pokemon.getType());
			}
		}
		System.out.println("Parents:");
		if(person.getParents().size() != 0) {
			List<Parents> parents = person.getParents();
			for(Parents parent : parents) {
				System.out.printf("%s %s%n", parent.getName(), parent.getDate());
			}
		}
		System.out.println("Children:");
		if(person.getChildren().size() != 0) {
			List<Children> childrens = person.getChildren();
			for(Children child : childrens) {
				System.out.printf("%s %s%n", child.getName(), child.getDate());
			}
		}
	}
}
