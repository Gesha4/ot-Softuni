//Expand Book by implementing Comparable<Book>
//Book have to be compared by name. When name is equal, compare them by year.
//Expand Book from UML diagram below:
//<<Comparable<Book>>>
//Book
//- title: String
//- year: int
//- authors: List&lt;String&gt;
//- setTitle(String)
//- setYear(String)
//- setAuthors(Stringâ€¦)
//+ getTitle(): String
//+ getYear(): int
//+ getAuthors(): List&lt;String&gt;
//+ compareTo(Book): int
//You can use only one constructor. Authors can be anonymous, one or many.

package zadachi;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Book implements Comparable<Book>{
	private String title;
	private int year;
	private List<String> authors;
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public int getYear() {
		return year;
	}
	public void setYear(int year) {
		this.year = year;
	}
	public List<String> getAuthors() {
		return authors;
	}
	public void setAuthors(String... authors) {
		if (authors.length == 0) {
			this.authors = new ArrayList<String>();
		} else {
			this.authors = new ArrayList<>(Arrays.asList(authors));
		}
	}
	public Book(String title, int year, String... authors) {
		this.title = title;
		this.year = year;
		setAuthors(authors);
	}
	@Override
	public int compareTo(Book b) {
		if(this.title.compareTo(b.getTitle()) == 0) {
			return this.year - b.getYear();
		} else {
			return this.title.compareTo(b.getTitle());
		}
	}
}
