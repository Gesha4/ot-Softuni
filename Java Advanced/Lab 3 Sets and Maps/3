//Write program that:
//Read 20 numbers for both players
//Numbers will be Integer, separated with " " (single space).
//Every player can hold only unique numbers
//Each Round both players get the top number from their own deck. Player with the bigger number get both numbers 
//and add it on the bottom of his own sequence
//Game ends after 50 rounds or if any player lose all of his numbers
//Output must be "First Player Win!", "Second Player Win!" or "Draw!"

import java.util.Arrays;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Scanner;

public class zadachi {
	
	public static LinkedHashSet<Integer> getCards(String input){
		LinkedHashSet<Integer> result = new LinkedHashSet<>();
		Arrays.stream(input.split("\\s+"))
			.mapToInt(Integer::parseInt)
			.forEach(result::add);
		return result;
	}
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		LinkedHashSet<Integer> firstPlayer = getCards(scan.nextLine());
		LinkedHashSet<Integer> secondPlayer = getCards(scan.nextLine());
		for(int round = 0; round < 50; round++) {
			if(firstPlayer.isEmpty() || secondPlayer.isEmpty()) {
				break;
			} else {
				Iterator<Integer> firstPlayerIterator = firstPlayer.iterator();
				Iterator<Integer> secondPlayerIterator = secondPlayer.iterator();
				int firstPlayerValue = firstPlayerIterator.next();
				firstPlayer.remove(firstPlayerValue);
				int secondPlayerValue = secondPlayerIterator.next();
				secondPlayer.remove(secondPlayerValue);
				if(firstPlayerValue > secondPlayerValue) {
					firstPlayer.add(firstPlayerValue);
					firstPlayer.add(secondPlayerValue);
				} else if(secondPlayerValue > firstPlayerValue) {
					secondPlayer.add(secondPlayerValue);
					secondPlayer.add(firstPlayerValue);
				} 
			}
		}
		if(firstPlayer.size() > secondPlayer.size()) {
			System.out.println("First player win!");
		} else if(secondPlayer.size() > firstPlayer.size()) {
			System.out.println("Second player win!");
		} else {
			System.out.println("Draw!");
		}
	}		
}
