//Write a program that reads an integer N on the first line. And on next N lines read pairs
//of "[name], [age]". Then read three more lines with:
// Condition - "younger" or "older"
// Age - Integer
// Format - "name", "age" or "name age"
//Depending on the condition, print the pairs in the right format. Donâ€™t use any build-in 
//functionality. Write your own methods.

import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.function.Consumer;
import java.util.function.Predicate;

public class zadachi {
	
	static Consumer<Map.Entry<String, Integer>> createPrinter(String format) {
		Consumer<Map.Entry<String, Integer>> printer = null;
		switch (format) {
			case "name age": printer = person -> System.out.printf("%s - %d%n",person.getKey(), person.getValue());break;
			case "name" : printer = person -> System.out.println(person.getKey());break;
			case "age" : printer = person -> System.out.println(person.getValue());break;
		}
		return printer;
	}
	
	static Predicate<Integer> createTester(String condition, Integer age) {
		Predicate<Integer> tester = null;
		switch (condition) {
			case "younger" : tester = x -> x <= age;break;
			case "older" : tester = x -> x >= age;break;
		}
		return tester;
	}
	
	static void printFilteredStudent(Map<String, Integer> people, Predicate<Integer> tester,
			Consumer<Map.Entry<String, Integer>> printer) {
			for (Map.Entry<String, Integer> person : people.entrySet()) {
				if (tester.test(people.get(person.getKey()))) {
					printer.accept(person);
				}
			}
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int countPpl = Integer.parseInt(scan.nextLine());
		Map<String, Integer> ppl = new LinkedHashMap<>();
		for(int i = 0; i < countPpl; i++) {
			String[] person = scan.nextLine().split(", ");
			ppl.put(person[0], Integer.parseInt(person[1]));
		}
		String condition = scan.nextLine();
		int age = Integer.parseInt(scan.nextLine());
		String format = scan.nextLine();
		Predicate<Integer> tester = createTester(condition, age);
		Consumer<Map.Entry<String, Integer>> printer = createPrinter(format);
		printFilteredStudent(ppl, tester, printer);
	}
}
