/*You are asked to model an application for storing data about people. You should be able to have a Person and a
Child. The child derives from the person. Every person has a name, and an age. Your task is to model the
application.
The Person class also have getters for the fields.
Create a Child class that inherits Person and has the same public constructor definition. However, do not copy the
code from the Person class - reuse the Person class&#39;s constructor.*/

//classes
package zadachi;

public class Person implements Comparable<Person>{
	private String name;
	private int age;
	
	public String getName() {
		return name;
	}
	public Integer getAge() {
		return age;
	}
	public Person(String name, int age) {
		this.name = name;
		this.age = age;
	}
	public Person(String[] data) {
		this.name = data[0];
		this.age = Integer.parseInt(data[1]);
	}
	@Override
	public int compareTo(Person p) {
		if(this.name.equals(p.name)) {
			return this.age - p.age;
		}
		return this.name.compareTo(p.name);
	}
	@Override
	public boolean equals(Object other) {
		if(other instanceof Person) {
			if(this.name.equals(((Person) other).name)
				&& this.age == ((Person) other).age) {
				return true;
			}
		}
		return false;
	}
	@Override
	public int hashCode() {
		return this.name.hashCode() + this.age;
	}
}

package zadachi;

public class Child extends Person{

	public Child(String name, int age) {
		super(name, age);
	}
}


//main
import java.util.Scanner;

import zadachi.Child;

public class zadachi {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String name = sc.nextLine();
		int age = Integer.parseInt(sc.nextLine());
		Child child = new Child(name, age);
		System.out.println(child.getName());
		System.out.println(child.getAge());
	}
}
