/*You are given a RichSoilLand class with lots of fields (look at the provided skeleton). Like the good farmer you are, you 
must harvest them. Harvesting means that you must print each field in a certain format (see output).
Input
You will receive a maximum of 100 lines with one of the following commands:
•	private - print all private fields
•	protected - print all protected fields
•	public - print all public fields
•	all - print ALL declared fields
•	HARVEST - end the input
Output
For each command you must print the fields that have the given access modifier as described in the input section. The format 
in which the fields should be printed is: "<access modifier> <field type> <field name>"*/

package harvestingFields;
import java.math.BigInteger;
import java.util.Calendar;
import java.util.stream.Stream;
public class RichSoilLand {
	private int testInt;
	public double testDouble;
	protected String testString;
	private long testLong;
	protected double aDouble;
	public String aString;
	private Calendar aCalendar;
	public StringBuilder aBuilder;
	private char testChar;
	public short testShort;
	protected byte testByte;
	public byte aByte;
	protected StringBuilder aBuffer;
	private BigInteger testBigInt;
	protected BigInteger testBigNumber;
	protected float testFloat;
	public float aFloat;
	private Thread aThread;
	public Thread testThread;
	private Object aPredicate;
	protected Object testPredicate;
	public Object anObject;
	private Object hiddenObject;
	protected Object fatherMotherObject;
	private String anotherString;
	protected String moarString;
	public int anotherIntBitesTheDust;
	private Exception internalException;
	protected Exception inheritableException;
	public Exception justException;
	public Stream aStream;
	protected Stream moarStreamz;
	private Stream secretStream;
}

package harvestingFields;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.Arrays;
import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Class land = RichSoilLand.class;
		Field[] fields = land.getDeclaredFields();
		Scanner scan = new Scanner(System.in);
		String line = scan.nextLine();
		while(!line.equals("HARVEST")) {
			switch(line) {
			case "protected" : Arrays.stream(fields)
				.filter(field -> Modifier.isProtected(field.getModifiers()))
				.forEach(field -> System.out.println(String.format("protected %s %s", 
						field.getType().getSimpleName(), field.getName())));break;
			case "private" : Arrays.stream(fields)
				.filter(field -> Modifier.isPrivate(field.getModifiers()))
				.forEach(field -> System.out.println(String.format("private %s %s", 
						field.getType().getSimpleName(), field.getName())));break;
			case "public" : Arrays.stream(fields)
				.filter(field -> Modifier.isPublic(field.getModifiers()))
				.forEach(field -> System.out.println(String.format("public %s %s", 
						field.getType().getSimpleName(), field.getName())));break;
			case "all" : Arrays.stream(fields)
				.forEach(field -> System.out.println(String.format("%s %s %s", 
						Modifier.toString(field.getModifiers()),
						field.getType().getSimpleName(), field.getName())));break;
			}
			line = scan.nextLine();
		}
	}
}
