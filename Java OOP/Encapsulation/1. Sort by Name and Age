/*Create a class Person, which should have private fields for:
•	firstName: String
•	lastName: String
•	age: int
•	toString() - override*/
//class
package zadachi;
public class Person {
	private String firstName;
	private String lastName;
	private int age;
	public String getFirstName() {
		return this.firstName;
	}
	public String getLastName() {
		return this.lastName;
	}
	public Integer getAge() {
		return this.age;
	}
	public Person(String firstName, String lastName, int age) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.age = age;
	}
	@Override
	public String toString() {
		return String.format("%s %s is %d years old.", this.firstName, this.lastName, this.age);
	}
}

//main
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import zadachi.Person;

public class zadachi {
	public static void main(String[] args) throws IOException {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
	    int n = Integer.parseInt(reader.readLine());
	    List<Person> people = new ArrayList<>();
	    for (int i = 0; i < n; i++) {
	        String[] input = reader.readLine().split(" ");
	        people.add(new Person(input[0], input[1], Integer.parseInt(input[2])));
	    }
	    Collections.sort(people, (firstPerson, secondPerson) -> {
	        int sComp = firstPerson.getFirstName().compareTo(secondPerson.getFirstName());

	        if (sComp != 0) {
	            return sComp;
	        } else { 
	            return Integer.compare(firstPerson.getAge(), secondPerson.getAge()); 
	        }
	    });
	    for (Person person : people) {
	        System.out.println(person.toString());
	    }
	}
}
