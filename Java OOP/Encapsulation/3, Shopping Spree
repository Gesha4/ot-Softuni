/*Create two classes: class Person and class Product. Each person should have a name, money and a bag of products.
Each product should have name and cost. Name cannot be an empty string. Be careful about white space in name.
Money and cost cannot be a negative number.

Person
- name: String
- money: double
- products: List&lt;Product&gt;
+ Person (String , double)
- setName (String) : void
- setMoney (double) : void
+ buyProduct (Product) : void
+ getName(): String

Product
- name: String
- cost: double
+ Product (String, double)
- setCost (double): void
- setName (String): void
+ getName(): String
+ getCost (): double

Create a program in which each command corresponds to a person buying a product. If the person can afford a product add it to 
his bag. If a person doesnâ€™t have enough money, print an appropriate message: "{Person name} can't afford {Product name}"
On the first two lines you are given all people and all products. After all purchases print every person in the order of
appearance and all products that he has bought also in order of appearance. If nothing is bought, print the name of the person 
followed by "Nothing bought". Read commands till you find line with "END" command. In case of invalid input (negative money 
exception message: "Money cannot be negative") or empty name: (empty name exception message "Name cannot be empty") break
the program with an appropriate message.*/
//classes
package zadachi;
public class Product {
	private String name;
	private double cost;
	private void setName(String name) {
		if (name.trim().isEmpty() || name == null) {
			throw new IllegalArgumentException("Name cannot be empty");
		} else {
			this.name = name;
		}
	}
	private void setCost(double cost) {
		if (cost < 0) {
			throw new IllegalArgumentException("Price can not be negative");
		} else {
			this.cost = cost;
		}
	}
	public String getName() {
		return name;
	}
	public double getCost() {
		return cost;
	}
	public Product(String name, double cost) {
		this.setName(name);
		this.setCost(cost);
	}
}

package zadachi;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
public class Person {
	private String name;
	private double money;
	private List<Product> products;
	private void setName(String name) {
		if (name.trim().isEmpty() || name == null) {
			throw new IllegalArgumentException("Name cannot be empty");
		} else {
			this.name = name;
		}
	}
	public String getName() {
		return name;
	}
	private void setMoney(double money) {
		if(money < 0) {
			throw new IllegalArgumentException("Money can not be negative");
		} else {
			this.money = money;
		}
	}
	public double getMoney() {
		return money;
	}
	public List<Product> getProducts() {
		return Collections.unmodifiableList(this.products);
	}
	public Person(String name, double money, List<Product> products) {
		this.setName(name);
		this.setMoney(money);
		this.products = new ArrayList<>();
	}
	public Product buyProduct(Product product) {
		Product buy = null;
		if(product.getCost() <= this.money) {
			this.money -= product.getCost();
			buy = product;
			System.out.printf("%s bought ", this.name, product.getName());
		} else {
			System.out.printf("%s can't afford %s", this.name, product.getName());
		}
		return buy;
	}
}
