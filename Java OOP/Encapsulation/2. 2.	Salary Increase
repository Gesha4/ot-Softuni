/*Read person with their names, age and salary. Read percent bonus to every person salary. People younger than 30 get half bonus.
Expand Person from previous task. Add salary field and getter and setter with proper access.
New fields and methods
•	salary: double 
•	increaseSalary(double bonus)*/
//class
package zadachi;
public class Person {
	private String firstName;
	private String lastName;
	private int age;
	private double salary;
	
	public double getSalary() {
		return salary;
	}
	public void setSalary(double salary) {
		this.salary = salary;
	}
	public String getFirstName() {
		return this.firstName;
	}
	public String getLastName() {
		return this.lastName;
	}
	public Integer getAge() {
		return this.age;
	}
	public Person(String firstName, String lastName, int age, double salary) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.age = age;
		this.salary = salary;
	}
	public void increaseSalary(double persentage) {
		if(this.age < 30) {
			this.setSalary(this.salary + (this.salary * persentage / 200));
		} else {
			this.setSalary(this.salary + (this.salary * persentage / 100));
		}
	}
	@Override
	public String toString() {
		return String.format("%s %s gets %.2f leva", this.firstName, this.lastName, this.salary);
	}
}

//main
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import zadachi.Person;

public class zadachi {

	public static void main(String[] args) throws IOException {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
	    int n = Integer.parseInt(reader.readLine());
	    List<Person> people = new ArrayList<>();
	    for (int i = 0; i < n; i++) {
	        String[] input = reader.readLine().split(" ");
	        people.add(new Person(input[0], input[1], Integer.parseInt(input[2]), Double.parseDouble(input[3])));
	    }
	    double bonus = Double.parseDouble(reader.readLine());
	    for (Person person : people) {
	        person.increaseSalary(bonus);
	        System.out.println(person.toString());
	    }
	}
}
