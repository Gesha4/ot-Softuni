/*Implement a simple state machine in the form of a traffic light. Every traffic light has three possible signals - red,
green and yellow. Each traffic light can be updated, which changes the color of its signal (e.g. if it is currently red, it
changes to green, if it is green it changes to yellow). The order of signals is red -> green -> yellow -> red and so on.
On the first line you will be given multiple traffic light signals in the format "RED GREEN YELLOW". They may be 3, more or less 
than 3. You need to make as many traffic lights as there are signals in the input. On the second line, you will receive the n number
of times you need to change each traffic light`s signal. Your output should consist of n number of lines, including each updated 
traffic light`s signal.*/
//enum
package zadachi;

public enum TrafficLights {
	RED, GREEN, YELLOW;
}

//main
import java.util.Arrays;
import java.util.Scanner;

import zadachi.TrafficLights;

public class zadachi {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		TrafficLights[] trafficLights = Arrays.stream(scan.nextLine().split("\\s+"))
				.map(TrafficLights::valueOf).toArray(TrafficLights[]::new);
		int n = Integer.parseInt(scan.nextLine());
		while(n-- > 0) {
			for(int i = 0; i < trafficLights.length; i++) {
				TrafficLights trafficLight = trafficLights[i];
				int next = trafficLight.ordinal() + 1;
				if(next == trafficLights.length) {
					next = 0;
				}
				TrafficLights nextLight = TrafficLights.values()[next];
				System.out.print(nextLight + " ");
				trafficLights[i] = nextLight;
			}
			System.out.println();
		}
	}
}
