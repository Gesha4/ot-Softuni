public class Car {
	private String type;
	private String color;
	private int numberOfDoors;
	private String city;
	private String adress;
	public String getType() {
		return this.type;
	}
	public void setType(String type) {
		this.type = type;
	}
	public String getColor() {
		return this.color;
	}
	public void setColor(String color) {
		this.color = color;
	}
	public int getNumberOfDoors() {
		return this.numberOfDoors;
	}
	public void setNumberOfDoors(int numberOfDoors) {
		this.numberOfDoors = numberOfDoors;
	}
	public String getCity() {
		return this.city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public String getAdress() {
		return this.adress;
	}
	public void setAdress(String adress) {
		this.adress = adress;
	}
	@Override
	public String toString() {
		return String.format("CarType: %s, Color: %s, Number of doors: %d, Manufactured in %s, at address: %s",
				this.type, this.color, this.numberOfDoors, this.city, this.adress);
	}
}

public class CarBuilderFacade {
	protected Car car;
	public CarBuilderFacade() {
		this.car = new Car();
	}
	public Car build() {
		return this.car;
	}
	public CarInfoBuilder info() {
		return new CarInfoBuilder(this.car);
	}
	public CarAddressBuilder built() {
		return new CarAddressBuilder(this.car);
	}
}

public class CarInfoBuilder extends CarBuilderFacade{
	public CarInfoBuilder(Car car) {
		this.car = car;
	}
	public CarInfoBuilder withType(String type) {
		car.setType(type);
		return this;
	}
	public CarInfoBuilder withColor(String color) {
		car.setColor(color);
		return this;
	}
	public CarInfoBuilder whithNumberOfDoors(int number) {
		car.setNumberOfDoors(number);
		return this;
	}
}

public class CarAddressBuilder extends CarBuilderFacade{
	public CarAddressBuilder (Car car) {
		this.car = car;
	}
	public CarAddressBuilder inCity(String city) {
		car.setCity(city);
		return this;
	}
	public CarAddressBuilder atAddress(String address) {
		car.setAdress(address);
		return this;
	}
}

public class zadachi {
	public static void main(String[] args) {
		Car car = new CarBuilderFacade()
				.info()
					.withType("BMW")
					.withColor("Black")
					.whithNumberOfDoors(5)
				.built()
					.inCity("Leipzig")
					.atAddress("Some address 254")
				.build();
		System.out.println(car);
	}
}
