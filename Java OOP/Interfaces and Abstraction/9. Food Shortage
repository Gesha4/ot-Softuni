/*Your totalitarian dystopian society suffers a shortage of food, so many rebels appear. Extend the code from your previous task
with new functionality to solve this task. Define a class Rebel which has a name, age and group (String), names are unique - there
will never be 2 Rebels/Citizens or a Rebel and Citizen with the same name. Define an interface Buyer which defines a methods 
buyFood() and a getFood(). Implement the Buyer interface in the Citizen and Rebel class, both Rebels and Citizens start with
0 food, when a Rebel buys food his food increases by 5, when a Citizen buys food his food increases by 10.*/
package zadachi;
public interface Identifiable {
	String getId();
}

package zadachi;
public interface Person {
	String getName();
	int getAge();
}

package zadachi;
public interface Buyer {
	void buyFood();
	int getFood();
}

package zadachi;
public class Rebel implements Buyer{
	private String name;
	private int age;
	private String group;
	private int food;
	public Rebel(String name, int age, String group) {
		this.name = name;
		this.age = age;
		this.group = group;
		this.food = 0;
	}
	public String getName() {
		return this.name;
	}
	public int getAge() {
		return this.age;
	}
	public String getGroup() {
		return this.group;
	}
	public int getFood() {
		return this.food;
	}
	public void buyFood() {
		this.food += 5;
	}
}

package zadachi;
public class Citizen implements Person, Identifiable, Buyer{
	private String name;
	private int age;
	private String id;
	private String birthDate;
	private int food;
	public String getName() {
		return name;
	}
	public int getAge() {
		return age;
	}
	public Citizen(String name, int age, String id, String birthDate) {
		this.name = name;
		this.age = age;
		this.id = id;
		this.birthDate = birthDate;
		this.food = 0;
	}
	@Override
	public String getId() {
		return this.id;
	}
	@Override
	public void buyFood() {
		this.food += 10;
	}
	@Override
	public int getFood() {
		return this.food;
	}
}
