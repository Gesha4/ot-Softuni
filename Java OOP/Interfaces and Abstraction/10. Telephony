/*You have a business - manufacturing cell phones. But you have no software developers, so you call your friends and ask them 
to help you create a cell phone software. They agree and you start working on the project. The project consists of one main
model - a Smartphone. Each of your smartphones should have functionalities of calling other phones and browsing in the world
wide web. Your friends are very busy, so you decide to write the code on your own. Here is the mandatory assignment:
You should have a model - Smartphone and two separate functionalities which your smartphone has - to call other phones and to
browse in the world wide web. You should end up with one class and two interfaces.
<<Interface>>
Callable
+	call(): String
<<Interface>>
Browsable
+	browse(): String
Smartphone
-	numbers: List<String>
-	urls: List<String>
+	Smartphone(List<String>, List<String>)
+	call(): String
+	browse(): String
Input
The input comes from the console. It will hold two lines:
•	First line: phone numbers to call (String), separated by spaces.
•	Second line: sites to visit (String), separated by spaces.
Output
•	First call all numbers in the order of input then browse all sites in order of input
•	The functionality of calling phones is printing on the console the number which are 
being called in the format: "Calling... <number>"
•	The functionality of the browser should print on the console the site in format:
"Browsing: <site>!" (pay attention to the exclamation mark when printing URLs)
•	If there is a number in the input of the URLs, print: "Invalid URL!" and continue printing the rest of the URLs.
•	If there is a character different from a digit in a number, print: "Invalid number!" and continue to the next number.
Constraints
•	Each site's URL should consist only of letters and symbols (No digits are allowed in the URL address)*/

package zadachi;
public interface Callable {
	String call();
}

package zadachi;
public interface Browsable {
	String browse();
}

package zadachi;
import java.util.Arrays;
import java.util.List;
public class Smartphone implements Callable, Browsable{
	private List<String> numbers;
	private List<String> urls;
	public Smartphone(String numbers, String urls) {
		this.numbers = Arrays.asList(numbers.split("\\s+"));
		this.urls = Arrays.asList(urls.split("\\s+"));
	}
	@Override
	public String call() {
		StringBuilder calling = new StringBuilder();
		for(String number : numbers) {
			if(isNumberRight(number)) {
				calling.append("Calling..." + number).append(System.lineSeparator());
			} else {
				calling.append("Invalid number!").append(System.lineSeparator());
			}
		}
		return calling.toString();
	}
	private boolean isNumberRight(String number) {
		boolean right = true;
		for(char ch : number.toCharArray()) {
			if(Character.isAlphabetic(ch)) {
				right = false;
				break;
			}
		}
		return right;
	}
	@Override
	public String browse() {
		StringBuilder surfing = new StringBuilder();
		for(String url : urls) {
			if(isUrlRight(url)) {
				surfing.append("Browsing: " + url).append(System.lineSeparator());
			} else {
				surfing.append("Invalid URL!").append(System.lineSeparator());
			}
		}
		return surfing.toString();
	}
	private boolean isUrlRight(String url) {
		boolean right = true;
		for(char ch : url.toCharArray()) {
			if(Character.isDigit(ch)) {
				right = false;
				break;
			}
		}
		return right;
	}
}

import java.util.Scanner;
import zadachi.Smartphone;
public class zadachi {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		String phoneNumbers = scan.nextLine();
		String sites = scan.nextLine();
		Smartphone smartphone = new Smartphone(phoneNumbers, sites);
		System.out.print(smartphone.call());
		System.out.print(smartphone.browse());
	}
}
